$sizes: 20, 30, 40;

@each $size in $sizes {
    .icon-#{$size} {
        font-size: #{$size}px;
    }
}

@function double($pixel) { //@function используется для создания функций, которые могут выполнять вычисления и возвращать значения. Эти функции могут использоваться для создания динамических стилей, например, для вычисления значений на основе входных параметров.
    @return $pixel * 2
};

@mixin theme-colors($light-theme) { //@mixin используется для создания набора стилей, которые могут быть повторно использованы в различных частях вашего стилевого файла.
    @if $light-theme {
        background-color: red;
        color: black;
    }

    @else {
        background-color: black;
        color: red;
    }
}

.mix {
    width: 200px;
    border-radius: double(10px);
    @include theme-colors(true)
}

.btn {
    padding: 10px 20px;
    font-size: 16px;
    background-color: #3498db;
    color: #fff;
    border: none;
  }
  
  /* Стиль для кнопок с закругленными углами */
  .rounded {
    border-radius: 5px;
  }
  
  /* Применение наследования */
  .my-button {
    @extend .btn; /* Наследование стилей от .btn */
    @extend .rounded; /* Наследование стилей от .rounded */
  }
  
  /* Стиль для кнопки с другим цветом фона */
  .another-button {
    @extend .btn; /* Наследование стилей от .btn */
    background-color: #e74c3c; /* Переопределение цвета фона */
}
  
  
  
  
  
  

